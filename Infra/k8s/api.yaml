apiVersion: apps/v1
kind: Deployment
metadata:
  name: userdistributed-api
  namespace: userdistributed
spec:
  selector:
    matchLabels:
      app: userdistributed-api
  replicas: 3
  template:
    metadata:
      labels:
        app: userdistributed-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: userdistributed-api
          image: userdistributed-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: ConnectionStrings__DefaultConnection
              value: "Server=sqlserver;Database=UserDistributed;User=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True"
            - name: ConnectionStrings__Redis
              value: "redis:6379"
            - name: ASPNETCORE_URLS
              value: "http://+:8080"
            - name: Logging__LogLevel__Default
              value: "Information"
            - name: Logging__LogLevel__Microsoft
              value: "Warning"
            - name: Logging__LogLevel__Microsoft.Hosting.Lifetime
              value: "Information"
            - name: Logging__Console__FormatterName
              value: "json"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: userdistributed-api
  namespace: userdistributed
spec:
  selector:
    app: userdistributed-api
  ports:
    - port: 80
      targetPort: 8080
  type: LoadBalancer
